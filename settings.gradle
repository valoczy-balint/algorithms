rootProject.name = 'algorithms'

include('graph')
include('tree')

include('heap')
include("avl")

include('dijkstra')
include('bfs')
include('dfs')

include('kotlin-skeleton')

include 'dynamic-programming:staircase'
findProject(':dynamic-programming:staircase')?.name = 'staircase'
include 'dynamic-programming:integerBreak'
findProject(':dynamic-programming:integerBreak')?.name = 'integerBreak'
include 'dynamic-programming:kattis'
findProject(':dynamic-programming:kattis')?.name = 'kattis'
include 'findFirstRepeatingCharacter'
include 'dynamic-programming:kadane'
findProject(':dynamic-programming:kadane')?.name = 'kadane'

include 'sort:merge-sort'
findProject(':sort:merge-sort')?.name = 'merge-sort'
include 'sort:quick-sort'
findProject(':sort:quick-sort')?.name = 'quick-sort'
include 'sort:bubble-sort'
findProject(':sort:bubble-sort')?.name = 'bubble-sort'
include 'sort:select-sort'
findProject(':sort:select-sort')?.name = 'select-sort'
include 'sort:insert-sort'
findProject(':sort:insert-sort')?.name = 'insert-sort'
include 'sort:heap-sort'
findProject(':sort:heap-sort')?.name = 'heap-sort'
include 'challenges:integerPalindrome'
findProject(':challenges:integerPalindrome')?.name = 'integerPalindrome'
include 'challenges:linkedListPalindrome'
findProject(':challenges:linkedListPalindrome')?.name = 'linkedListPalindrome'
include 'challenges:lowestCommonAncestorInBST'
findProject(':challenges:lowestCommonAncestorInBST')?.name = 'lowestCommonAncestorInBST'
include 'challenges:lowestCommonAncestorInBinaryTree'
findProject(':challenges:lowestCommonAncestorInBinaryTree')?.name = 'lowestCommonAncestorInBinaryTree'
include 'challenges:productOfArrayExceptSelf'
findProject(':challenges:productOfArrayExceptSelf')?.name = 'productOfArrayExceptSelf'
include 'challenges:slidingWindowMaximum'
findProject(':challenges:slidingWindowMaximum')?.name = 'slidingWindowMaximum'
include 'challenges:networkDelayTime'
findProject(':challenges:networkDelayTime')?.name = 'networkDelayTime'
include 'challenges:dijkstra:pathWithMaximumProbability'
findProject(':challenges:dijkstra:pathWithMaximumProbability')?.name = 'pathWithMaximumProbability'
include 'challenges:bfs:shortestReach'
findProject(':challenges:bfs:shortestReach')?.name = 'shortestReach'
include 'challenges:trappingRainWater'
findProject(':challenges:trappingRainWater')?.name = 'trappingRainWater'
include 'challenges:balancedBrackets'
findProject(':challenges:balancedBrackets')?.name = 'balancedBrackets'
include 'challenges:contacts'
findProject(':challenges:contacts')?.name = 'contacts'
include 'challenges:runningMedian'
findProject(':challenges:runningMedian')?.name = 'runningMedian'
include 'challenges:unionFind:numberOfConnectedComponentsInAnUndirectedGraph'
findProject(':challenges:unionFind:numberOfConnectedComponentsInAnUndirectedGraph')?.name = 'numberOfConnectedComponentsInAnUndirectedGraph'
include 'challenges:unionFind:numberOfProvinces'
findProject(':challenges:unionFind:numberOfProvinces')?.name = 'numberOfProvinces'
include 'challenges:swapNodes'
findProject(':challenges:swapNodes')?.name = 'swapNodes'
include 'challenges:topologicalOrder:alienDictionary'
findProject(':challenges:topologicalOrder:alienDictionary')?.name = 'alienDictionary'
include 'challenges:candies'
findProject(':challenges:candies')?.name = 'candies'

include 'interview:kotlin-skeleton-1'
findProject(':interview:kotlin-skeleton-1')?.name = 'kotlin-skeleton-1'
include 'interview:kotlin-skeleton-2'
findProject(':interview:kotlin-skeleton-2')?.name = 'kotlin-skeleton-2'

include 'challenges:amazon-demo-1'
findProject(':challenges:amazon-demo-1')?.name = 'amazon-demo-1'
include 'challenges:amazon-demo-2'
findProject(':challenges:amazon-demo-2')?.name = 'amazon-demo-2'
include 'challenges:dijkstra:shortestReach2'
findProject(':challenges:dijkstra:shortestReach2')?.name = 'shortestReach2'

include 'challenges:searchInRotatedSortedArray'
findProject(':challenges:searchInRotatedSortedArray')?.name = 'searchInRotatedSortedArray'
include 'challenges:numberOfIslands'
findProject(':challenges:numberOfIslands')?.name = 'numberOfIslands'
include 'challenges:maximalSquare'
findProject(':challenges:maximalSquare')?.name = 'maximalSquare'
include 'challenges:timeSeriesRobots'
findProject(':challenges:timeSeriesRobots')?.name = 'timeSeriesRobots'
include 'challenges:birthdayBar'
findProject(':challenges:birthdayBar')?.name = 'birthdayBar'
include 'challenges:magicSquare'
findProject(':challenges:magicSquare')?.name = 'magicSquare'
include 'challenges:pickingNumbers'
findProject(':challenges:pickingNumbers')?.name = 'pickingNumbers'
include 'challenges:climbTheLeaderBoard'
findProject(':challenges:climbTheLeaderBoard')?.name = 'climbTheLeaderBoard'
include 'challenges:commonChild'
findProject(':challenges:commonChild')?.name = 'commonChild'
include 'challenges:validParentheses'
findProject(':challenges:validParentheses')?.name = 'validParentheses'
include 'challenges:gasStation'
findProject(':challenges:gasStation')?.name = 'gasStation'
include 'challenges:symmetricTrees'
findProject(':challenges:symmetricTrees')?.name = 'symmetricTrees'
